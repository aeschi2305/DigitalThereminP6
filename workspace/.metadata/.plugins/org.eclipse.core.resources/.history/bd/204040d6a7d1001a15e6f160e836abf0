/*----------------------------------------------------
 * File    : gui.c
 * Author  :
 * Date    : Dec 18 2020
 * Company : Institute of Microelectronics (IME) FHNW
 * Content :
 *--------------------------------------------------*/

#include "gui.h"
#define GREY 0xBDBD
#define GREY_SOFT 0xCCCC

alt_16 pixel_accuracy_old = 0;


/*----------------------------------------------------
 * Function:
 * Purpose :
 * Return  : none
 *--------------------------------------------------*/
void draw_main_screen(void)
{
	LCD_DrawRect(15,10,75,310,GREY);
	vid_print_string(80,34,BLACK,&arial_22ptBitmaps,&arial_22ptDescriptors,"Kalibrieren");
	LCD_DrawRect(90,10,150,310,GREY);
	vid_print_string(80,109,BLACK,&arial_22ptBitmaps,&arial_22ptDescriptors,"Volume");
	LCD_DrawRect(165,10,225,310,GREY);
	vid_print_string(80,184,BLACK,&arial_22ptBitmaps,&arial_22ptDescriptors,"Hilfseffekt");
}

/*----------------------------------------------------
 * Function:
 * Purpose :
 * Return  : none
 *--------------------------------------------------*/
void draw_calibrating_screen(void)
{
	vid_print_string(80,50,BLACK,&arial_22ptBitmaps,&arial_22ptDescriptors,"calibrating");
	vid_print_string(150,100,BLACK,&arial_22ptBitmaps,&arial_22ptDescriptors,"...");
}

void draw_calibrating_screen_done(void)
{
	vid_print_string(80,50,BLACK,&arial_22ptBitmaps,&arial_22ptDescriptors,"calibrating");
	vid_print_string(150,100,BLACK,&arial_22ptBitmaps,&arial_22ptDescriptors,"done");
	LCD_DrawRect(170,10,230,110,GREY);
	vid_print_string(244,189,BLACK,&arial_22ptBitmaps,&arial_22ptDescriptors,"@");
}

/*----------------------------------------------------
 * Function:
 * Purpose :
 * Return  : none
 *--------------------------------------------------*/
void draw_volume_screen(void)
{
	vid_print_string(10,25,BLACK,&arial_22ptBitmaps,&arial_22ptDescriptors,"Volume");
	LCD_DrawRect(55,10,115,90,GREY);
	vid_print_string(260,60,BLACK,&arial_22ptBitmaps,&arial_22ptDescriptors,"_");
	LCD_DrawRect(55,100,115,180,GREY);
	vid_print_string(175,74,BLACK,&arial_22ptBitmaps,&arial_22ptDescriptors,"+");

	LCD_DrawRect(170,10,230,110,GREY);
	vid_print_string(244,189,BLACK,&arial_22ptBitmaps,&arial_22ptDescriptors,"@");
}

void draw_update_volume_bar(alt_u8 vol_bar)
{
	alt_u8 i;
	LCD_DrawRect(55,195,115,310,GREY_SOFT);
	for(i = 0; i < vol_bar; i++){
		LCD_DrawRect(60,(299-i*6-i*5),110,(299-i*6-i*5+6),GREEN);
	}
}

/*----------------------------------------------------
 * Function:
 * Purpose :
 * Return  : none
 *--------------------------------------------------*/
void draw_help_screen(void)
{

	LCD_DrawRect(15,10,75,90,GREY);
	vid_print_string(235,34,BLACK,&arial_22ptBitmaps,&arial_22ptDescriptors,"Set");
	LCD_DrawRect(90,110,150,310,GREY);
	vid_print_string(15,109,BLACK,&arial_22ptBitmaps,&arial_22ptDescriptors,"Anzeige Ton");

	LCD_DrawRect(170,10,230,110,GREY);
	vid_print_string(244,189,BLACK,&arial_22ptBitmaps,&arial_22ptDescriptors,"@");

}

void draw_glissando_on_off(alt_u8 on_off){
	if(on_off == 1){
		LCD_DrawRect(15,110,75,310,GREEN);
		vid_print_string(15,34,BLACK,&arial_22ptBitmaps,&arial_22ptDescriptors,"Glissando on");
	}else{
		LCD_DrawRect(15,110,75,310,GREY);
		vid_print_string(15,34,BLACK,&arial_22ptBitmaps,&arial_22ptDescriptors,"Glissando off");
	}
}

/*----------------------------------------------------
 * Function:
 * Purpose :
 * Return  : none
 *--------------------------------------------------*/
void draw_glissando_set(void)
{
	vid_print_string(10,10,BLACK,&arial_22ptBitmaps,&arial_22ptDescriptors,"Delay");
	LCD_DrawRect(40,195,100,310,GREY_SOFT);
	LCD_DrawRect(40,10,100,90,GREY);
	vid_print_string(260,45,BLACK,&arial_22ptBitmaps,&arial_22ptDescriptors,"_");
	LCD_DrawRect(40,100,100,180,GREY);
	vid_print_string(175,59,BLACK,&arial_22ptBitmaps,&arial_22ptDescriptors,"+");

	LCD_DrawRect(175,10,235,110,GREY);
	vid_print_string(244,194,BLACK,&arial_22ptBitmaps,&arial_22ptDescriptors,"@");
}

void draw_update_glissando_delay(alt_u8 gli_delay)
{
	alt_u8 i;
	LCD_DrawRect(40,195,100,310,GREY_SOFT);
	for(i = 0; i < gli_delay; i++){
		LCD_DrawRect(45,(299-i*6-i*5),95,(299-i*6-i*5+6),GREEN);
	}
}

void draw_penta_on_off(alt_u8 on_off){
	if(on_off == 1){
		LCD_DrawRect(110,100,170,310,GREEN);
		vid_print_string(15,126,BLACK,&arial_22ptBitmaps,&arial_22ptDescriptors,"pentatonik on");
	}else{
		LCD_DrawRect(110,100,170,310,GREY);
		vid_print_string(15,126,BLACK,&arial_22ptBitmaps,&arial_22ptDescriptors,"pentatonik off");
	}
}
/*----------------------------------------------------
 * Function:
 * Purpose :
 * Return  : none
 *--------------------------------------------------*/
void draw_display_ton(void)
{
	LCD_DrawRect(153,10,155,310,BLACK);
	LCD_DrawRect(60,159,155,161,BLACK);
	LCD_DrawRect(10,130,60,180,WHITE);
	vid_print_string(149,38,BLACK,&arial_22ptBitmaps,&arial_22ptDescriptors,"C#");
	LCD_DrawRect(170,10,230,110,GREY);
	vid_print_string(244,189,BLACK,&arial_22ptBitmaps,&arial_22ptDescriptors,"@");
}
void draw_display_ton_update(alt_u8 penta_on_off)
{
	alt_u32 tmp = read_freq_pitch();
	alt_32 index = (alt_32)((tmp & 0xFC000000)>>26);
	alt_16 pixel_accuracy;
	char penta_string[21][3] = {{"C#3"},{"D#3"},{"F#3"},{"G#3"},{"A#3"},{"C#4"},{"D#4"},{"F#4"},{"G#4"},{"A#4"},{"C#5"},{"D#5"},{"F#5"},{"G#5"},{"A#5"},{"C#6"},{"D#6"},{"F#6"},{"G#6"},{"A#6"},{"C#7"}};
	char ton_string[49][3] = {{"C3 "},{"C#3"},{"D3 "},{"D#3"},{"E3 "},{"F3 "},{"F#3"},{"G3 "},{"G#3"},{"A3 "},{"A#3"},{"B3 "},{"C4 "},{"C#4"},{"D4 "},{"D#4"},{"E4 "},{"F4 "},{"F#4"},{"G4 "},{"G#4"},{"A4 "},{"A#4"},{"B4 "},{"C5 "},{"C#5"},{"E5 "},{"F5 "},{"F#5"},{"G5 "},{"G#5"},{"A5 "},{"A#5"},{"B5 "},{"C6 "},{"C#6"},{"D6 "},{"D#6"},{"E6 "},{"F6 "},{"F#6"},{"G6 "},{"G#6"},{"A6 "},{"A#6"},{"B6 "},{"C7 "}};
	char display_string[3];
	LCD_DrawRect(10,90,60,180,WHITE);

	if (penta_on_off == 1 ){
		for(int i = 0; i < 3;i++){
			display_string[i] = penta_string[index][i];
		}
		//vid_print_string(149,38,BLACK,&arial_22ptBitmaps,&arial_22ptDescriptors,&display_string);
	}else{
		for(int i = 0; i < 3;i++){
				display_string[i] = ton_string[index][i];
			}
		vid_print_string(149,38,BLACK,&arial_22ptBitmaps,&arial_22ptDescriptors,"Ton Anzei");
		//vid_print_string(149,38,BLACK,&arial_22ptBitmaps,&arial_22ptDescriptors,&display_string);
	}
	pixel_accuracy = get_pixel_pitch_accuracy(penta_on_off,tmp);

	if(pixel_accuracy_old < 0){//clear cursor
		LCD_DrawRect(133,(160 + abs(pixel_accuracy_old)),152,(160 + abs(pixel_accuracy_old)+2),WHITE);
	}else{
		LCD_DrawRect(133,(160 - pixel_accuracy_old),152,(160 - pixel_accuracy_old+2),BLACK);
	}
	if(pixel_accuracy < 0){ //draw cursor
		LCD_DrawRect(133,(160 + abs(pixel_accuracy)),152,(160 + abs(pixel_accuracy)+2),BLACK);
	}else{
		LCD_DrawRect(133,(160 - pixel_accuracy),152,(160 - pixel_accuracy+2),BLACK);
	}
	pixel_accuracy_old = pixel_accuracy;
}
